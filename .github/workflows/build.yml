name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=github-releases depName=golangci/golangci-lint
  GOLANGCI_LINT_VERSION: v2.3.1
  # https://github.com/actions/setup-go/issues/491
  GOTOOLCHAIN: local
  RUSTFLAGS: --deny warnings
  RUSTDOCFLAGS: --deny warnings

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - macos-14
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - windows-2022

    runs-on: ${{ matrix.runs-on }}

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: .go-version

      - name: Set up Rust
        run: rustup show

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - name: Build minijinja-cabi (Unix)
        if: runner.os != 'windows'
        run: |
          ./build.sh

          echo 'LD_LIBRARY_PATH=lib' >>"${GITHUB_ENV}"

      - name: Build minijinja-cabi (Windows)
        if: runner.os == 'windows'
        run: |
           ./build.ps1

           Add-Content -Path $env:GITHUB_PATH -Value (Resolve-Path 'lib').Path

      - name: Test
        run: go test -v ./...

  lint:
    runs-on: ubuntu-24.04

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: .go-version

      - name: Set up Rust
        run: rustup show

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - name: Build minijinja-cabi
        run: ./build.sh

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

  codeql-analyze:
    runs-on: ubuntu-24.04
    permissions:
      security-events: write

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: .go-version

      - name: Set up Rust
        run: rustup show

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - name: Build minijinja-cabi
        run: ./build.sh

      - name: Initialize CodeQL
        uses: github/codeql-action/init@76621b61decf072c1cee8dd1ce2d2a82d33c17ed # v3.29.8
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@76621b61decf072c1cee8dd1ce2d2a82d33c17ed # v3.29.8

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@76621b61decf072c1cee8dd1ce2d2a82d33c17ed # v3.29.8
